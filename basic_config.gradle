// Top-level build file where you can add configuration options common to all sub-projects/modules.
project.ext {
    mApplicationId = "com.example.gavin.gavinsource"

    supportVersion = "28.0.0"

    isDebug = false
    isLib = false

    isTabOneRun = false
    isTabMainRun = false
    isTestDebug = false

    //设置App配置
    setAppDefaultConfig = {
        extension ->
            extension.apply plugin: 'com.android.application'
            apply plugin: 'com.jakewharton.butterknife'
            extension.description "app"
            setAndroidConfig extension.android
            setDependencies extension.dependencies
            extension.android.defaultConfig {
                if(!"app".equals(extension.getName())){
                    applicationId mApplicationId + "." + extension.getName()
                }else{
                    applicationId mApplicationId

                }
            }
    }

    //设置Lib配置
    setLibDefaultConfig = {
        extension ->
            extension.apply plugin: 'com.android.library'
            extension.apply plugin: 'com.jakewharton.butterknife'

            extension.description "lib"
            setAndroidConfig extension.android
            extension.android {
                defaultConfig {
                    //Library 如果不指定defaultPublishConfig 构建都会是release版本
                    defaultPublishConfig 'debug'
                    publishNonDefault true
                    //组件混淆合并
                    consumerProguardFiles 'proguaed-rules.pro'
                }
            }
            setDependencies extension.dependencies
    }

    setDefaultConfig = {
        extension ->
            setAndroidConfig extension.android
            setDependencies extension.dependencies
    }

    //设置Android配置
    setAndroidConfig = {
        extension ->
            extension.compileSdkVersion 28
            extension.buildToolsVersion "28.0.0"

            extension.defaultConfig {
                targetSdkVersion 26
                minSdkVersion 16
                testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
                javaCompileOptions {
                    annotationProcessorOptions {
                        arguments = [AROUTER_MODULE_NAME: extension.project.getName()]
                    }
                }
            }
            extension.buildTypes {
                debug {
                    extension.defaultConfig { minSdkVersion 16 }
                }
                release {
                    extension.defaultConfig { minSdkVersion 16 }
                }
            }

            extension.dataBinding {
                enabled = true
            }
            extension.project.tasks.whenTaskAdded { task ->
                if (task.name.contains("lint")//不启动lint代码扫描潜在bug可以使用
                        || task.name.equals("clean")
                        || task.name.contains("Aidl") //项目中有用到aidl则不可以舍弃这个任务
                        || task.name.contains("mockableAndroidJar")//用不到测试的时候就可以先关闭
                        || task.name.contains("UnitTest")//用不到测试的时候就可以先关闭
                        || task.name.contains("AndroidTest")//用不到NDK和JNI的也关闭掉
                        || task.name.contains("Ndk")
                        || task.name.contains("Jni")
                ) {
                    task.enabled = false
                }
            }
    }

    //设置依赖
    setDependencies = {
        extension ->
            extension.api fileTree(dir: 'libs', include: ['*.jar'])
    }
}